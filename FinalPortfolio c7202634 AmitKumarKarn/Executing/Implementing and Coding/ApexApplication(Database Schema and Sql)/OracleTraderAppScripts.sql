--------------------TRADER-----------------------
--------HOME PAGE--------
-----BADGE LIST------
SELECT 'Monthly Sales' as label,
     'Rs.' || trim(nvl(sum(SUB_TOTAL),0)) as value,
     apex_util.prepare_url( 'f?p='||:APP_ID||':4:'||:APP_SESSION||':::4,RIR:IRGTE_ORDER_DATE:'||:P1_THIS_MONTH ) as url
 FROM ORDERS ord, ORDER_DETAILS o JOIN PRODUCT p ON o.PRODUCT_ID = p.PRODUCT_ID JOIN SHOP s
ON p.SHOP_ID = s.SHOP_ID INNER JOIN USERS u ON s.TRADER_ID = u.USER_ID 
WHERE upper(u.USERNAME) = upper('&APP_USER.') and ord.INVOICE_NO = o.INVOICE_NO
and ord.ORDER_DATE >= to_date(to_char(sysdate,'YYYYMM')||'01','YYYYMMDD')  
union all
select 
    'Monthly Orders' as label,
    trim(to_char(count(distinct o.INVOICE_NO),'999G999G999G999G990')) as value,
    apex_util.prepare_url( 'f?p='||:APP_ID||':4:'||:APP_SESSION||':::4,RIR:IRGTE_ORDER_DATE:'||:P1_THIS_MONTH ) as url
from ORDERS o, ORDER_DETAILS od, PRODUCT pd, SHOP s, USERS u
where ORDER_DATE >= to_date(to_char(sysdate,'YYYYMM')||'01','YYYYMMDD')
and o.INVOICE_NO = od.INVOICE_NO
and od.PRODUCT_ID = pd.PRODUCT_ID
and pd.SHOP_ID = s.SHOP_ID
and s.TRADER_ID = u.USER_ID
and upper(u.USERNAME) = upper('&APP_USER.')
union all
select 'Total Products' as label,
        trim(to_char(count(distinct p.PRODUCT_NAME),'999G999G999G999G990')) as value,
        apex_util.prepare_url( 'f?p='||:APP_ID||':3:'||:APP_SESSION||':::' ) as url
from PRODUCT p, SHOP s, USERS u
where
p.SHOP_ID = s.SHOP_ID
and s.TRADER_ID = u.USER_ID
and upper(u.USERNAME) = upper('&APP_USER.')
union all
select 'Total Customers' as label,
        trim(to_char(count(*),'999G999G999G999G990')) as value,
        apex_util.prepare_url( 'f?p='||:APP_ID||':2:'||:APP_SESSION||':::' ) as url
from USERS
where
upper(USERNAME) = upper('&APP_USER.')



------TRADER DETAILS REPORT-----
select USER_ID,
       USERNAME,
       USER_TYPE,
       ADDED_BY,
       FULLNAME,
       USER_IMAGE,
       USER_CONTACT,
       USER_EMAIL,
       PASSWORD,
       VERIFICATION_STATUS
  from USERS
where upper(username) = upper('&APP_USER.')



----SALES HISTORY PAGE------

------TOTAL SALES BY PRODUCT-----
SELECT  p.PRODUCT_NAME, SUM(od.SUB_TOTAL)  FROM ORDER_DETAILS od, ORDERS o, COLLECTION_SLOT cs, SHOP s,  PRODUCT p, USERS u , USERS t
 WHERE od.INVOICE_NO = o.INVOICE_NO AND o.SLOT_NO = cs.SLOT_NO AND od.PRODUCT_ID = p.PRODUCT_ID AND p.SHOP_ID = s.SHOP_ID AND o.USER_ID = u.USER_ID AND t.USER_ID = s.TRADER_ID 
 AND upper(t.USERNAME) = upper('&APP_USER.')
GROUP BY od.PRODUCT_ID,  p.PRODUCT_NAME; 

----TOTAL QUANTITIES SOLD BY PRODUCT------
SELECT  p.PRODUCT_NAME, SUM(od.PRODUCT_QUANTITY) QUANTITIES_SOLD FROM ORDER_DETAILS od, ORDERS o, COLLECTION_SLOT cs, SHOP s,  PRODUCT p, USERS u , USERS t
 WHERE od.INVOICE_NO = o.INVOICE_NO AND o.SLOT_NO = cs.SLOT_NO AND od.PRODUCT_ID = p.PRODUCT_ID AND p.SHOP_ID = s.SHOP_ID AND o.USER_ID = u.USER_ID AND t.USER_ID = s.TRADER_ID AND t.USER_ID = 6
GROUP BY od.PRODUCT_ID,  p.PRODUCT_NAME; 

----PRODUCT SALES HISTORY WITH CUSTOMERS----
SELECT u.FULLNAME USER_NAME, p.PRODUCT_NAME, od.PRODUCT_QUANTITY,od.SUB_TOTAL, cs.SLOT_INFO COLLECTION_SLOT , o.COLLECTION_DATE   FROM ORDER_DETAILS od, ORDERS o, COLLECTION_SLOT cs, SHOP s,  PRODUCT p, USERS u , USERS t
WHERE od.INVOICE_NO = o.INVOICE_NO AND o.SLOT_NO = cs.SLOT_NO AND od.PRODUCT_ID = p.PRODUCT_ID AND p.SHOP_ID = s.SHOP_ID AND o.USER_ID = u.USER_ID AND 
t.USER_ID = s.TRADER_ID AND upper(t.USERNAME) = upper('&APP_USER.');
              


----DAILY SALES PAGE-----

-----DAILY SALES BY DATE GRAPH------
SELECT to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY') ORDER_DATE ,
    nvl(sum(o.SUB_TOTAL),0) as Total_Sale
 FROM ORDERS ord, ORDER_DETAILS o JOIN PRODUCT p ON o.PRODUCT_ID = p.PRODUCT_ID JOIN SHOP s
ON p.SHOP_ID = s.SHOP_ID INNER JOIN USERS u ON s.TRADER_ID = u.USER_ID 
WHERE upper(u.USERNAME) = upper('&APP_USER.') and ord.INVOICE_NO = o.INVOICE_NO
and to_date(to_char(ord.ORDER_DATE,'MM.DD.YYYY'), 'MM/DD/YYYY') >= (SYSDATE-1)
GROUP BY to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY');

------DAILY SALES REPORT-----   
 SELECT o.INVOICE_NO, TO_CHAR(o.ORDER_DATE, 'DAY, MM/DD/YYYY') DAY, c.SLOT_INFO SLOT, o.COLLECTION_DATE, u.FULLNAME CUSTOMER, SUM(od.SUB_TOTAL) AMOUNT
FROM ORDERS o, ORDER_DETAILS od, COLLECTION_SLOT c, USERS u, PRODUCT pd, SHOP s, USERS t
WHERE o.INVOICE_NO = od.INVOICE_NO AND  o.SLOT_NO = c.SLOT_NO
AND o.USER_ID = u.USER_ID AND od.PRODUCT_ID = pd.PRODUCT_ID AND pd.SHOP_ID = s.SHOP_ID AND s.TRADER_ID = t.USER_ID
AND upper(t.USERNAME) = upper('&APP_USER.')
AND to_date(to_char(o.ORDER_DATE,'MM.DD.YYYY'), 'MM/DD/YYYY') >= (SYSDATE-1)
GROUP BY u.USER_ID, o.INVOICE_NO, TO_CHAR(o.ORDER_DATE, 'DAY, MM/DD/YYYY'), c.SLOT_INFO, o.COLLECTION_DATE, u.FULLNAME;


-----WEEKLY SALES BY DATE GRAPH------
SELECT to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY') ORDER_DATE ,
    nvl(sum(o.SUB_TOTAL),0) as Total_Sale
 FROM ORDERS ord, ORDER_DETAILS o JOIN PRODUCT p ON o.PRODUCT_ID = p.PRODUCT_ID JOIN SHOP s
ON p.SHOP_ID = s.SHOP_ID INNER JOIN USERS u ON s.TRADER_ID = u.USER_ID 
WHERE upper(u.USERNAME) = upper('&APP_USER.') and ord.INVOICE_NO = o.INVOICE_NO
and to_date(to_char(ord.ORDER_DATE,'MM.DD.YYYY'), 'MM/DD/YYYY') >= (SYSDATE-7)
GROUP BY to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY')
ORDER BY to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY') DESC;


----WEEKLY SALES REPORT-----
 SELECT o.INVOICE_NO, TO_CHAR(o.ORDER_DATE, 'DAY, MM/DD/YYYY') DAY, c.SLOT_INFO SLOT, o.COLLECTION_DATE, u.FULLNAME CUSTOMER, SUM(od.SUB_TOTAL) AMOUNT
FROM ORDERS o, ORDER_DETAILS od, COLLECTION_SLOT c, USERS u, PRODUCT pd, SHOP s, USERS t
WHERE o.INVOICE_NO = od.INVOICE_NO AND  o.SLOT_NO = c.SLOT_NO
AND o.USER_ID = u.USER_ID AND od.PRODUCT_ID = pd.PRODUCT_ID AND pd.SHOP_ID = s.SHOP_ID AND s.TRADER_ID = t.USER_ID
AND upper(t.USERNAME) = upper('&APP_USER.')
AND to_date(to_char(o.ORDER_DATE,'MM.DD.YYYY'), 'MM/DD/YYYY') >= (SYSDATE-7)
GROUP BY u.USER_ID, o.INVOICE_NO, TO_CHAR(o.ORDER_DATE, 'DAY, MM/DD/YYYY'), c.SLOT_INFO, o.COLLECTION_DATE, u.FULLNAME;
   


-----MONTHLY SALES BY DATE GRAPH------
SELECT to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY') ORDER_DATE ,
    nvl(sum(o.SUB_TOTAL),0) as Total_Sale
 FROM ORDERS ord, ORDER_DETAILS o JOIN PRODUCT p ON o.PRODUCT_ID = p.PRODUCT_ID JOIN SHOP s
ON p.SHOP_ID = s.SHOP_ID INNER JOIN USERS u ON s.TRADER_ID = u.USER_ID 
WHERE upper(u.USERNAME) = upper('&APP_USER.') and ord.INVOICE_NO = o.INVOICE_NO
and to_date(to_char(ord.ORDER_DATE,'MM.DD.YYYY'), 'MM/DD/YYYY') >= (SYSDATE-30)
GROUP BY to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY')
ORDER BY to_char(ord.ORDER_DATE,'DAY, MM/DD/YYYY') DESC;


----MONTHLY SALES REPORT-----
 SELECT o.INVOICE_NO, TO_CHAR(o.ORDER_DATE, 'DAY, MM/DD/YYYY') DAY, c.SLOT_INFO SLOT, o.COLLECTION_DATE, u.FULLNAME CUSTOMER, SUM(od.SUB_TOTAL) AMOUNT
FROM ORDERS o, ORDER_DETAILS od, COLLECTION_SLOT c, USERS u, PRODUCT pd, SHOP s, USERS t
WHERE o.INVOICE_NO = od.INVOICE_NO AND  o.SLOT_NO = c.SLOT_NO
AND o.USER_ID = u.USER_ID AND od.PRODUCT_ID = pd.PRODUCT_ID AND pd.SHOP_ID = s.SHOP_ID AND s.TRADER_ID = t.USER_ID
AND upper(t.USERNAME) = upper('&APP_USER.')
AND to_date(to_char(o.ORDER_DATE,'MM.DD.YYYY'), 'MM/DD/YYYY') >= (SYSDATE-30)
GROUP BY u.USER_ID, o.INVOICE_NO, TO_CHAR(o.ORDER_DATE, 'DAY, MM/DD/YYYY'), c.SLOT_INFO, o.COLLECTION_DATE, u.FULLNAME;


------SHOPS PAGE------
----BADGE LIST------
SELECT 
'TOTAL SHOPS ASSOCIATED WITH &APP_USER.' AS LABEL,
COUNT(*) AS VALUE
FROM SHOP s, USERS u
WHERE s.TRADER_ID = u.USER_ID
AND upper(u.USERNAME) = upper('&APP_USER.')


----SHOPS REPORT--------
select SHOP_ID,
       SHOP_NAME,
       SHOP_LOCATION,
       TRADER_ID
  from SHOP s, USERS u
where s.TRADER_ID = u.USER_ID
and upper(u.USERNAME) = upper('&APP_USER.')



------PRODUCTS PAGE------
----BADGE LIST------
SELECT 
'TOTAL PRODUCTS ASSOCIATED WITH &APP_USER.' AS LABEL,
COUNT(*) AS VALUE
FROM PRODUCT p, SHOP s, USERS u
WHERE p.SHOP_ID = s.SHOP_ID AND
s.TRADER_ID = u.USER_ID
AND upper(u.USERNAME) = upper('&APP_USER.')



----PRODUCTS REPORT--------
select PRODUCT_ID,
       PRODUCT_NAME,
       PRODUCT_TYPE,
       PRODUCT_PRICE,
       PRODUCT_IMAGE1,
       PRODUCT_IMAGE2,
       PRODUCT_IMAGE3,
       PRODUCT_DESCRIPTION,
       ALLERGY_INFORMATION,
       STOCK_AVAILABLE,
       MIN_ORDER,
       MAX_ORDER,
       CAT_ID,
       p.SHOP_ID,
       s.SHOP_NAME
  from PRODUCT p, SHOP s, USERS u
  WHERE p.SHOP_ID = s.SHOP_ID AND
  s.TRADER_ID = u.USER_ID
  AND upper(u.USERNAME) = upper('&APP_USER.')

------SHOPS AND PRODUCTS PAGE------
-------MASTER RECORDS-----
select "SHOP_ID",
    null link_class,
    apex_page.get_url(p_items => 'P15_SHOP_ID', p_values => "SHOP_ID") link,
    null icon_class,
    null link_attr,
    null icon_color_class,
    case when nvl(:P15_SHOP_ID,'0') = "SHOP_ID"
      then 'is-active' 
      else ' '
    end list_class,
    substr("SHOP_NAME", 1, 50)||( case when length("SHOP_NAME") > 50 then '...' end ) list_title,
    substr("SHOP_LOCATION", 1, 50)||( case when length("SHOP_LOCATION") > 50 then '...' end ) list_text,
    null list_badge
from "SHOP" x, "USERS" u
where (:P15_SEARCH is null
        or upper(x."SHOP_NAME") like '%'||upper(:P15_SEARCH)||'%'
        or upper(x."SHOP_LOCATION") like '%'||upper(:P15_SEARCH)||'%'
    )
    and x.TRADER_ID = u.USER_ID
    and upper(u.USERNAME) = upper('&APP_USER.')
order by "SHOP_NAME"





--------RECENT ORDERS PAGE------
-----BADGELIST---------
SELECT 
'TOTAL ORDERS RECEIVED' AS LABEL,
COUNT(*) AS VALUE
FROM ORDERS o, ORDER_DETAILS od, PRODUCT p, SHOP s, USERS u
WHERE o.INVOICE_NO = od.INVOICE_NO AND od.PRODUCT_ID = p.PRODUCT_ID AND
p.SHOP_ID = s.SHOP_ID AND 
s.TRADER_ID = u.USER_ID
AND upper(u.USERNAME) = upper('&APP_USER.')
UNION ALL
SELECT 
'TOTAL PRODUCTS SOLD' AS LABEL,
SUM(od.PRODUCT_QUANTITY) AS VALUE
FROM ORDERS o, ORDER_DETAILS od, PRODUCT p, SHOP s, USERS u
WHERE o.INVOICE_NO = od.INVOICE_NO AND od.PRODUCT_ID = p.PRODUCT_ID AND
p.SHOP_ID = s.SHOP_ID AND 
s.TRADER_ID = u.USER_ID
AND upper(u.USERNAME) = upper('&APP_USER.')
UNION ALL
SELECT 
'TOTAL INCOME' AS LABEL,
SUM(od.SUB_TOTAL) AS VALUE
FROM ORDERS o, ORDER_DETAILS od, PRODUCT p, SHOP s, USERS u
WHERE o.INVOICE_NO = od.INVOICE_NO AND od.PRODUCT_ID = p.PRODUCT_ID AND
p.SHOP_ID = s.SHOP_ID AND 
s.TRADER_ID = u.USER_ID
AND upper(u.USERNAME) = upper('&APP_USER.')

--------RECENT ORDERS REPORT--------
SELECT INVOICE_NO, u.FULLNAME CUSTOMER,to_char(o.ORDER_DATE, 'DAY, MM/DD/YYYY') DATE_ORDERED, cs.SLOT_INFO, COLLECTION_DATE, py.PAYMENT_AMOUNT FROM USERS u, PAYMENT py, 
COLLECTION_SLOT cs, ORDERS o INNER JOIN ORDER_DETAILS od USING(INVOICE_NO)
INNER JOIN PRODUCT p USING(PRODUCT_ID) INNER JOIN SHOP s USING(SHOP_ID) INNER JOIN
USERS t ON s.TRADER_ID = t.USER_ID WHERE o.USER_ID = u.USER_ID AND o.SLOT_NO = cs.SLOT_NO AND py.PAYMENT_ID = o.PAYMENT_ID
AND upper(t.USERNAME) = upper('&APP_USER.')
GROUP BY INVOICE_NO, COLLECTION_DATE, u.FULLNAME, py.PAYMENT_AMOUNT, to_char(o.ORDER_DATE, 'DAY, MM/DD/YYYY'), cs.SLOT_INFO
ORDER BY COLLECTION_DATE DESC


-------------REVIEW AND RATINGS PAGE--------
-------REVIEW AND RATING REPORT------
select REVIEW_ID,
        u.FULLNAME CUSTOMER,
        p.PRODUCT_NAME,
       REVIEW_DATE,
       RATING,
       REVIEW_DESCRIPTION
  from USERS u, REVIEW r INNER JOIN PRODUCT p USING(PRODUCT_ID) INNER JOIN SHOP s USING(SHOP_ID)
  INNER JOIN USERS t ON s.TRADER_ID = t.USER_ID WHERE upper(t.USERNAME) = upper('&APP_USER.')
  AND r.USER_ID = u.USER_ID
  





   
